%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 63 195 408 431 
%%LanguageLevel: 2
%%Creator: CorelDRAW
%%Title: caps-logo.eps
%%CreationDate: Thu Jan 27 16:50:47 2011
%%DocumentProcessColors: Cyan Magenta Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 2 def
%Build: CorelDRAW Versión 14.0.0.701
%Color profile: Desactivado
/CorelIsEPS true def
%%BeginResource: procset wCorel14Dict 14.0 0
/wCorel14Dict 300 dict def wCorel14Dict begin
% Copyright (c)1992-2007 Corel Corporation
% All rights reserved.     v14 r0.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/fill_color 6 array def/num_fill_inks 1 def/$o 0 def/$fil 0 def
/outl_color 6 array def/num_outl_inks 1 def/$O 0 def/$PF false def/$bkg false
def/$op false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def
/$stm matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1
}ifelse def/level2 get_ps_level 2 ge def/level3 get_ps_level 3 ge def
/is_distilling{/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse}bd/is_rip_separation{
is_distilling{false}{level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse}bd/is_current_sep_color{
is_separation{gsave false setoverprint 1 1 1 1 5 -1 roll findcmykcustomcolor 1
setcustomcolor currentgray 0 eq grestore}{pop false}ifelse}bd
/get_sep_color_index{dup length 1 sub 0 1 3 -1 roll{dup 3 -1 roll dup 3 -1 roll
get is_current_sep_color{exit}{exch pop}ifelse}for pop -1}bd/is_separation{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
is_rip_separation{true}{1 0 0 0 gsave setcmykcolor currentcmykcolor grestore
add add add 0 ne 0 1 0 0 gsave setcmykcolor currentcmykcolor grestore add add
add 0 ne 0 0 1 0 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne
0 0 0 1 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne and and
and not}ifelse}ifelse}ifelse}bind def/is_composite{is_separation not
is_distilling or}bd/is_sim_devicen{level2 level3 not and{is_distilling
is_rip_separation or}{false}ifelse}bd/@PL{/LV where{pop LV 2 ge level2 not and
{@np/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if level2{/@ssa{true setstrokeadjust}
bd}{/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c
/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N
/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}
bd/@J{@rs}bd/g{1 exch sub 0 0 0 1 null 1 set_fill_color/$fil 0 def}bd/G{1 sub
neg 0 0 0 1 null 1 set_outline_color}bd/set_fill_color{/fill_color exch def
/num_fill_inks fill_color length 6 idiv def/bFillDeviceN num_fill_inks 1 gt def
/$fil 0 def}bd/set_outline_color{/outl_color exch def/num_outl_inks outl_color
length 6 idiv def/bOutlDeviceN num_outl_inks 1 gt def}bd
/get_devicen_color_names{dup length 6 idiv dup 5 mul exch getinterval}bd
/create_colorarray_from_devicen_params{/ink_names_temp exch def
/tint_params_temp exch def/ink_values_temp exch def[ink_values_temp aload pop
tint_params_temp aload pop ink_names_temp aload pop]}bd
/get_devicen_color_specs{dup length 6 idiv dup 4 mul getinterval}bd
/get_devicen_color{dup length 6 idiv 0 exch getinterval}bd/mult_devicen_color{
/colorarray exch def/mult_vals exch def 0 1 mult_vals length 1 sub{colorarray
exch dup mult_vals exch get exch dup colorarray exch get 3 -1 roll mul put}for
colorarray}bd/combine_devicen_colors{/colorarray2 exch def/colorarray1 exch def
/num_inks1 colorarray1 length 6 idiv def/num_inks2 colorarray2 length 6 idiv
def/num3 0 def/colorarray3[num_inks1 num_inks2 add 6 mul{0}repeat]def 0 1
num_inks1 1 sub{colorarray1 exch get colorarray3 num3 3 -1 roll put/num3 num3 1
add def}for 0 1 num_inks2 1 sub{colorarray2 exch get colorarray3 num3 3 -1 roll
put/num3 num3 1 add def}for colorarray1 num_inks1 dup 4 mul getinterval
colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 4 mul add def
colorarray2 num_inks2 dup 4 mul getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 4 mul add def colorarray1 num_inks1 dup 5 mul
exch getinterval colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 add
def colorarray2 num_inks2 dup 5 mul exch getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 add def colorarray3}bd/get_devicen_color_spec{
/colorant_index exch def/colorarray exch def/ncolorants colorarray length 6
idiv def[colorarray colorant_index get colorarray ncolorants colorant_index 4
mul add 4 getinterval aload pop colorarray ncolorants 5 mul colorant_index add
get]}bd/set_devicen_color{level3{/colorarray exch def/numcolorants colorarray
length 6 idiv def colorarray get_devicen_color_specs/tint_params exch def[
/DeviceN colorarray get_devicen_color_names/DeviceCMYK{tint_params
CorelTintTransformFunction}]setcolorspace colorarray get_devicen_color aload
pop setcolor}{/DeviceCMYK setcolorspace devicen_to_cmyk aload pop pop @tc_5
setprocesscolor_5}ifelse}bd/sf{/bmp_fill_fg_color xd}bd/i{dup 0 ne{setflat}
{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld
/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm
exch dup concatmatrix/$ptm xd}if/patternScallingMatrix where{pop
patternScallingMatrix $ptm matrix concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup
/$sdf xd{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd
/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra
add exch load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq
{$SCA}{$dsa}ifelse $SCP @ss}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2
copy ge{pop}{exch pop}ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup
0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/devicen_to_cmyk{/convertcolor
exch def convertcolor get_devicen_color aload pop convertcolor
get_devicen_color_specs CorelTintTransformFunction}bd/WaldoColor_5 where{pop}{
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/$op xd}bd}ifelse
/currentoverprint where{pop}{/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll
dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1
roll @tc_5}bd/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1
roll pop pop pop 1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/Corelsetcustomcolor_exists false def/setcustomcolor where{pop
/Corelsetcustomcolor_exists true def}if CorelIsSeps true eq CorelIsInRIPSeps
false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{dup(CorelRegistrationColor)eq{5 rp 1 exch sub
setregcolor}{findcmykcustomcolor exch setcustomcolor}ifelse}ifelse SepMode_5 0
eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage where{pop
/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi true eq{
ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop daqG pop
daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs{daqC pop
daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{
/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul cvi exch
pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{4 eq{
/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3 add get
255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat
length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse/setcmykcolor{
1 5 1 roll null 6 array astore currentoverprint set_current_color/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}bd
/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def
/WaldoColor_13 where{pop}{/separate_color{SepMode_5 0 ne{[exch/colorarray_sep
exch def/ink_num -1 def colorarray_sep length 6 idiv 1 gt{colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{colorarray_sep ink_num get_devicen_color_spec aload pop pop SepsColor not{
pop pop pop pop 1 0 0 0 5 -1 roll}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 5 get $ink_5 4 eq{CurrentInkName_5 eq{colorarray_sep aload pop
pop SepsColor not{pop pop pop pop 0 0 0 1}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 0 get colorarray_sep $ink_5 1 add get 3 -1 roll null eq{0 0 0 4
-1 roll SepsColor{4 $ink_5 1 add roll}if null}{pop pop 0 0 0 0 0 null}ifelse
}ifelse}ifelse]}if}bd/separate_cmyk_color{$ink_5 -1 ne{[exch aload pop 3 $ink5
sub index/colorarray_sep exch def/ink_num -1 def colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{[colorarray_sep ink_num get_devicen_color_spec aload pop]}{[0 0 0 0 0 null]
}ifelse}if}bd/set_current_color{dup type/booleantype eq{dup currentoverprint ne
{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse/cur_color exch def
/nNumColors cur_color length 6 idiv def nNumColors 1 eq{cur_color 5 get
(CorelRegistrationColor)eq{cur_color aload pop 5 rp 1 exch sub setregcolor}{
SepMode_5 0 eq{cur_color aload pop dup null eq{pop @tc_5 setprocesscolor_5}{
findcmykcustomcolor exch setcustomcolor}ifelse}{cur_color separate_color aload
pop pop @tc_5 setprocesscolor_5}ifelse}ifelse}{SepMode_5 0 eq{is_distilling
is_rip_separation or{cur_color set_devicen_color}{cur_color devicen_to_cmyk
setprocesscolor_5}ifelse}{cur_color separate_color aload pop pop @tc_5
setprocesscolor_5}ifelse}ifelse SepMode_5 0 eq{true}{GetGry 1 eq
currentoverprint and not}ifelse}bd}ifelse/WaldoColor_13 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d fill_color $o set_current_color pop $ctm setmatrix
72 1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{level3{fill_color $o
set_current_color{wfill}{@np}ifelse}{/overprint_flag $o def is_distilling
is_rip_separation or{0 1 num_fill_inks 1 sub{dup 0 gt{/overprint_flag true def
}if fill_color exch get_devicen_color_spec overprint_flag set_current_color{
@gs wfill @gr}{@np exit}ifelse}for}{fill_color overprint_flag set_current_color
{@gs wfill @gr}{@np}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa
$dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm setmatrix $SDF
{$SCF $SCA $SCP @ss}if level3{outl_color $O set_current_color{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}{/overprint_flag $O def
is_distilling is_rip_separation or{0 1 num_outl_inks 1 sub{dup 0 gt{
/overprint_flag true def}if outl_color exch get_devicen_color_spec
overprint_flag set_current_color{matrix currentmatrix $ptm concat @gs stroke
@gr setmatrix}{@np exit}ifelse}for}{outl_color overprint_flag set_current_color
{matrix currentmatrix $ptm concat @gs stroke @gr setmatrix}{@np}ifelse}ifelse
}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{
@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring
pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd
/Bbllx xd}bd/@c{@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd
/tcc{@cc}def/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict
/pdfmark known not{/pdfmark/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}
ifelse}bd level2{/setregcolor{/neg_flag exch def[/Separation/All/DeviceCMYK{
dup dup dup}]setcolorspace 1.0 neg_flag sub setcolor}bd}{/setregcolor{1 exch
sub dup dup dup setcmykcolor}bd}ifelse/CorelTintTransformFunction{
/colorantSpecArray exch def/nColorants colorantSpecArray length 4 idiv def
/inColor nColorants 1 add 1 roll nColorants array astore def/outColor 4 array
def 0 1 3{/nOutInk exch def 1 0 1 nColorants 1 sub{dup inColor exch get exch 4
mul nOutInk add colorantSpecArray exch get mul 1 exch sub mul}for 1 exch sub
outColor nOutInk 3 -1 roll put}for outColor aload pop}bind def
% Copyright (c)1992-2007 Corel Corporation
% All rights reserved.     v14 r0.0
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch put 1 add}ifelse}forall pop}if dup 256 dict
dup/$met xd/Metrics exch put dup/FontMatrix get 0 get 1000 mul 1 exch div 3
index length 256 eq{0 1 255{dup $fe exch get dup/.notdef eq{pop pop}{5 index 3
-1 roll get 2 index mul $met 3 1 roll put}ifelse}for}if pop definefont pop pop
}bd/CorelIsValidCharpath{pathbbox 3 -1 roll sub abs 0.5 ge 3 1 roll sub abs 0.5
ge and}bd/@ftx{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup @gs true
charpath $ctm setmatrix CorelIsValidCharpath{@@txt}if @gr @np stringwidth pop 3
-1 roll add exch m}forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp
@ss}if $fil 1 eq{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/@ff ld @ftx}{$fil 3 eq
{/@@txt/@Pf ld @ftx}{$fil 4 eq{/@@txt/CorelShfillDoFill ld @ftx}{fill_color $o
set_current_color{show}{pop}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa
$dsp @ss}if setmatrix}bd/@st{matrix currentmatrix exch $SDF{$SCF $SCA $SCP @ss}
if outl_color $O set_current_color{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0
exch put dup @gs true charpath $ctm setmatrix $ptm concat stroke @gr @np
stringwidth pop 3 -1 roll add exch m}forall}{pop}ifelse $SDF{$dsf $dsa $dsp
@ss}if setmatrix}bd/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr @st}bd/@t@a{dup
@gs @st @gr @ft}bd/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}def}bd/o{/t{pop}
def}bd/a{/t{@ta}def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm setmatrix/$ttm
matrix def}bd/ddt{t}def/@t{/$stm $stm currentmatrix def 3 1 roll m $ttm concat
ddt $stm setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd/@l{}bd
/_lineorientation 0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null def
/_bithibyte 0 def
% Copyright (c)1992-2007 Corel Corporation
% All rights reserved.     v14 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{bmp_fill_fg_color $O set_current_color/$frg xd}{/$frg false
def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{fill_color set_current_color pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi string def $msimage false eq
$ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi
$ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string
def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def/bImgDeviceN false def/nNumInksDeviceN 0 def
/sNamesDeviceN[]def/tint_params[]def level2{/@I_2{@sm @gs @ii @np/$ury xd/$urx
xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul
8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}
{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly
sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0
1 0 1 0 1 0 1]}ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt
{$hei}{0}ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq
{/DCTDecode filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode
filter}if}ifelse}ifelse def currentdict end image $SDF{$dsf $dsa $dsp @ss}if
@gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse level2{/@I_2D{@sm @gs @ii @np/$ury xd
/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx/scanline $wid
$bts mul $ncl mul 8 div ceiling cvi string def/readscanline{currentfile
scanline readhexstring pop}bind def level3{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]setcolorspace $llx $lly Tl $urx $llx
sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei
abs def/BitsPerComponent $bts def/Decode[nNumInksDeviceN{0 1}repeat]def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image}{/scanline_height $lly $ury sub 1 sub
$hei div def/plate_scanline $wid string def/cmyk_scanline $wid 4 mul string def
is_distilling is_rip_separation or{/bSimDeviceN true def}{/bSimDeviceN false
def}ifelse/scanline_img_dict 8 dict begin/ImageType 1 def/Width $wid def
/Height 1 def/BitsPerComponent $bts def/Decode bSimDeviceN{[0 1]}{[0 1 0 1 0 1
0 1]}ifelse def/ImageMatrix[$wid 0 0 1 neg 0 1]def/DataSource bSimDeviceN{
plate_scanline}{cmyk_scanline}ifelse def currentdict end def 0 1 $hei 1 sub{
@gs/nScanIndex exch def readscanline pop/$t_lly $ury $lly scanline_height
nScanIndex mul sub sub ceiling cvi def/$t_ury $t_lly scanline_height sub
ceiling cvi def bSimDeviceN{0 1 $ncl 1 sub{@gs/nInkIndex exch def 0 1
plate_scanline length 1 sub{dup $ncl mul nInkIndex add scanline exch get
plate_scanline 3 1 roll put}for[0 1 $ncl 1 sub{nInkIndex eq{1.0}{0.0}ifelse
}for]/sepTintTransformParams exch def[/Separation sNamesDeviceN nInkIndex get
/DeviceCMYK{sepTintTransformParams aload pop tint_params
CorelTintTransformFunction @tc_5}]setcolorspace $llx $t_lly Tl $urx $llx sub
$t_ury $t_lly sub scale nInkIndex 0 eq currentoverprint not and{false
setoverprint}{true setoverprint}ifelse scanline_img_dict image @gr}for}{0 1
$wid 1 sub{dup $ncl mul scanline exch $ncl getinterval 0 1 $ncl 1 sub{2 copy
get 255 div 3 1 roll pop}for pop tint_params CorelTintTransformFunction 5 -1
roll cmyk_scanline exch 0 1 3{3 1 roll 2 copy 5 -1 roll dup 8 exch sub index
255 mul cvi 3 1 roll exch 4 mul add exch put}for 6 rp}for/DeviceCMYK
setcolorspace $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale
scanline_img_dict image}ifelse @gr}for}ifelse $SDF{$dsf $dsa $dsp @ss}if @gr
$ctm setmatrix}bd}{/@I_2D{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury xd/$urx xd/$lly
xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi string def $ngx bImgDeviceN{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]}{$ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse}ifelse setcolorspace $llx $lly Tl $urx
$llx sub $ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin
/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def
/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}
ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode
filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode filter}if}
ifelse}ifelse def end/MaskedImageDict 7 dict def MaskedImageDict begin
/ImageType 3 def/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict
ImageDataDict def end MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if @gr $ctm
setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid xd/ImageMaskDict 8 dict def
ImageMaskDict begin/ImageType 1 def/Width $mwid def/Height $mhei abs def
/BitsPerComponent $mbts def/DataSource maskstream def/ImageMatrix[$mwid 0 0
$mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]def end}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop bImgDeviceN{@I_2D}{@I_2}ifelse}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd/disable_raster_output{/@BMP load
/old_raster_func exch bind def/@BMP{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl
xd/$bts xd/$hei xd/$wid xd/scanline $wid $bts mul $ncl mul 8 div ceiling cvi
string def 0 1 $hei 1 sub{currentfile scanline readhexstring pop pop pop}for
}def}bd/enable_raster_output{/old_raster_func where{pop/old_raster_func load
/@BMP exch bd}if}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel14Dict begin
@BeginSysCorelDict
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 0 1 1 0
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
63.91559 262.72828 161.74715 430.02879 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.46 0.08 0.00 0.32 null ] set_fill_color
161.74715 263.06135 m
160.41402 262.82806 158.98082 262.72828 157.41411 262.72828 c
155.84740 262.72828 154.64750 262.72828 153.74721 262.72828 c
131.18117 262.72828 111.54813 270.92665 94.84838 287.32337 c
78.11546 303.68693 69.74901 323.28312 69.74901 346.04532 c
69.74901 368.94076 78.14863 388.63701 94.91499 405.20041 c
111.68135 421.76381 131.34756 430.02879 153.91417 430.02879 c
155.34737 430.02879 156.81402 430.02879 158.24721 430.02879 c
159.58063 430.02879 160.51408 430.02879 161.08072 430.02879 C
161.08072 398.36835 L
158.84731 398.70170 156.64734 398.86838 154.41420 398.86838 c
140.18088 398.86838 127.74784 393.70252 117.08135 383.37137 c
106.41487 373.03994 101.08148 360.70894 101.08148 346.37839 c
101.08148 332.04813 106.41487 319.61707 117.08135 309.05235 c
127.74784 298.48791 140.24778 293.22227 154.58088 293.22227 c
157.01386 293.22227 159.41395 293.38894 161.74715 293.72202 C
161.74715 263.06135 L
@c
F

@rax %Note: Object
228.09685 264.59717 325.98283 430.06167 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.46 0.08 0.00 0.32 null ] set_fill_color
228.09685 430.06167 m
275.78183 430.06167 l
289.53950 430.06167 301.33247 425.18324 311.22340 415.39408 c
321.11433 405.60520 325.98283 387.84643 325.98283 373.77213 c
325.98283 359.36787 321.68409 344.68724 312.45392 333.69052 c
307.32094 327.57534 299.83408 323.70605 291.67228 320.67099 c
289.20416 319.75313 284.35635 319.07112 277.10901 318.46252 c
269.85940 317.85364 263.96362 317.53956 259.45285 317.53956 c
258.38957 317.53956 257.74526 317.53956 257.51962 317.53956 C
257.09443 264.59717 L
228.09685 264.59717 L
228.09685 430.06167 L
@c
257.40737 346.26246 m
278.14025 346.26246 l
283.61764 346.26246 287.57622 347.84447 292.23638 351.02183 C
300.48690 361.21691 298.06299 371.41370 298.06299 377.24769 c
298.06299 383.08195 295.16258 389.83181 291.34375 394.06819 c
287.52718 398.30202 282.77348 400.39682 277.07046 400.39682 c
257.09443 400.39682 L
257.40737 346.26246 L
@c
F

@rax %Note: Object
293.21603 262.75691 395.04302 429.05509 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.26 0.05 0.00 0.13 null ] set_fill_color
293.73789 262.75691 m
293.21603 293.81216 L
302.86346 294.05509 l
308.34454 294.19313 312.72208 297.39373 316.05619 304.05515 c
318.44438 308.82671 320.75093 316.95506 322.90980 328.38831 c
326.33660 346.05496 328.32397 356.05502 328.90649 358.38822 c
331.75077 370.28835 334.73225 380.05512 337.81606 387.72170 c
342.61370 399.72161 348.19937 409.05496 354.60709 415.72176 c
362.83153 424.15483 372.32362 428.38838 383.04907 428.38838 c
395.04302 429.05509 L
395.04302 398.05512 L
387.84671 398.05512 l
381.33609 398.05512 375.61323 394.12176 370.71298 386.22161 c
366.70365 379.78838 363.27685 370.98822 360.43257 359.88831 c
358.37688 351.78831 356.76624 343.05506 355.63521 333.72170 c
353.23654 314.28850 348.58602 298.46806 341.75679 286.22183 c
333.26929 271.00233 321.48028 263.66655 307.67896 263.21414 c
293.73789 262.75691 L
@c
F

@rax %Note: Object
157.81606 405.39260 238.21654 430.02709 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.46 0.08 0.00 0.32 null ] set_fill_color
157.81606 430.02709 m
238.21654 430.02709 L
238.21654 405.39260 L
157.81606 405.39260 L
157.81606 430.02709 L
@c
F

@rax %Note: Object
70.04069 245.33688 394.49565 257.57178 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 0.30 null ] set_fill_color
70.04069 257.57178 m
394.49565 257.57178 L
394.49565 245.33688 L
70.04069 245.33688 L
70.04069 257.57178 L
@c
F

@rax %Note: Object
68.55137 195.80031 216.82148 213.95225 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.46 0.08 0.00 0.32 null ] set_fill_color
68.55137 196.16428 m
73.18120 213.61209 L
76.93455 213.61209 L
81.56438 196.16428 L
78.02135 196.16428 L
77.16076 199.72828 L
72.86060 199.72828 L
72.00340 196.16428 L
68.55137 196.16428 L
@c
76.41014 202.89231 m
75.01238 208.64013 L
73.61150 202.89231 L
76.41014 202.89231 L
@c
95.59531 196.16428 m
91.39890 196.16428 L
87.58573 202.56435 L
86.34813 202.56435 L
86.34813 196.16428 L
82.92444 196.16428 L
82.92444 213.61209 L
88.43698 213.61209 l
89.19694 213.61209 89.85969 213.55228 90.42208 213.43209 C
90.98731 213.30822 91.50860 213.05622 91.98595 212.67609 C
92.47946 212.27613 92.86866 211.77213 93.15468 211.15616 C
93.44353 210.54416 93.58809 209.76406 93.58809 208.82013 c
93.58809 207.48416 93.35254 206.40019 92.88142 205.56822 C
92.40690 204.73625 91.77562 204.07635 90.98419 203.58425 C
95.59531 196.16428 L
@c
90.05443 208.26822 m
90.05443 208.70419 89.98866 209.08431 89.85657 209.40009 c
89.72447 209.71616 89.50479 209.96022 89.20006 210.13228 C
88.98321 210.24822 88.74482 210.32022 88.48063 210.35225 c
88.21701 210.38428 87.89046 210.40016 87.49786 210.40016 c
86.34813 210.40016 L
86.34813 205.70428 L
87.33118 205.70428 l
87.81194 205.70428 88.21701 205.74028 88.55008 205.81625 C
88.88598 205.88825 89.16888 206.04813 89.40104 206.28822 C
89.62101 206.50819 89.78769 206.76813 89.89427 207.07625 C
90.00113 207.38013 90.05443 207.77613 90.05443 208.26822 c
@c
102.51496 195.82441 m
100.46041 195.82441 98.82737 196.61641 97.61811 198.19616 C
96.40885 199.78016 95.80564 202.00422 95.80564 204.87231 c
95.80564 207.63609 96.41197 209.84031 97.62435 211.48413 c
98.83672 213.12822 100.47005 213.95225 102.52403 213.95225 c
103.07083 213.95225 103.56066 213.91228 103.99720 213.83603 C
104.43402 213.75609 104.85156 213.64809 105.25068 213.50806 C
105.56164 213.38816 105.90406 213.22828 106.27143 213.02816 C
106.63909 212.82406 106.93729 212.64803 107.16350 212.50006 C
107.16350 208.34022 L
106.81483 208.34022 L
106.64844 208.52816 106.43783 208.75209 106.18668 209.01231 C
105.93524 209.27622 105.64951 209.53219 105.33203 209.78022 C
105.01172 210.03222 104.66022 210.24425 104.27698 210.42028 c
103.89373 210.59603 103.49461 210.68419 103.07707 210.68419 c
102.58072 210.68419 102.12520 210.58413 101.71049 210.38428 C
101.29606 210.18416 100.90035 209.84031 100.52674 209.34822 C
100.18403 208.90431 99.90170 208.30025 99.68485 207.54425 C
99.46800 206.78428 99.35802 205.89222 99.35802 204.86013 c
99.35802 203.77219 99.47112 202.86028 99.69732 202.12016 C
99.92665 201.38428 100.22202 200.78816 100.59250 200.33631 C
100.94740 199.89638 101.34312 199.58031 101.78306 199.38416 c
102.22271 199.18828 102.65924 199.09219 103.09578 199.09219 c
103.54819 199.09219 103.98161 199.18828 104.39291 199.38019 c
104.80450 199.57238 105.15005 199.78413 105.43266 200.01628 C
105.74050 200.26035 106.01065 200.50838 106.24309 200.75613 C
106.47553 201.00813 106.67962 201.22838 106.84942 201.42425 C
107.16350 201.42425 L
107.16350 197.32422 L
106.91206 197.17625 106.62009 197.00419 106.29014 196.81228 C
105.95735 196.62435 105.61805 196.46022 105.26627 196.32841 C
104.83909 196.16428 104.43713 196.04041 104.06013 195.95225 C
103.68624 195.86835 103.17118 195.82441 102.51496 195.82441 c
@c
120.75449 196.16428 m
117.31181 196.16428 L
117.31181 203.89635 L
112.62898 203.89635 L
112.62898 196.16428 L
109.18630 196.16428 L
109.18630 213.61209 L
112.62898 213.61209 L
112.62898 207.22422 L
117.31181 207.22422 L
117.31181 213.61209 L
120.75449 213.61209 L
120.75449 196.16428 L
@c
130.41609 196.16428 m
123.03496 196.16428 L
123.03496 199.21238 L
125.00419 199.21238 L
125.00419 210.56428 L
123.03496 210.56428 L
123.03496 213.61209 L
130.41609 213.61209 L
130.41609 210.56428 L
128.44687 210.56428 L
128.44687 199.21238 L
130.41609 199.21238 L
130.41609 196.16428 L
@c
135.32854 196.16428 m
135.32854 210.28422 L
131.27981 210.28422 L
131.27981 213.61209 L
142.81994 213.61209 L
142.81994 210.28422 L
138.77121 210.28422 L
138.77121 196.16428 L
135.32854 196.16428 L
@c
144.23641 196.16428 m
144.23641 213.61209 L
153.50230 213.61209 L
153.50230 210.28422 L
147.66009 210.28422 L
147.66009 207.22422 L
153.04365 207.22422 L
153.04365 203.89635 L
147.66009 203.89635 L
147.66009 199.49216 L
153.50230 199.49216 L
153.50230 196.16428 L
144.23641 196.16428 L
@c
161.73808 195.82441 m
159.68381 195.82441 158.05049 196.61641 156.84123 198.19616 C
155.63197 199.78016 155.02904 202.00422 155.02904 204.87231 c
155.02904 207.63609 155.63509 209.84031 156.84746 211.48413 c
158.05984 213.12822 159.69317 213.95225 161.74743 213.95225 c
162.29395 213.95225 162.78406 213.91228 163.22060 213.83603 C
163.65713 213.75609 164.07468 213.64809 164.47380 213.50806 C
164.78476 213.38816 165.12718 213.22828 165.49455 213.02816 C
165.86220 212.82406 166.16041 212.64803 166.38661 212.50006 C
166.38661 208.34022 L
166.03795 208.34022 L
165.87156 208.52816 165.66094 208.75209 165.40980 209.01231 C
165.15865 209.27622 164.87263 209.53219 164.55543 209.78022 C
164.23512 210.03222 163.88334 210.24425 163.50009 210.42028 c
163.11685 210.59603 162.71773 210.68419 162.30019 210.68419 c
161.80384 210.68419 161.34860 210.58413 160.93389 210.38428 C
160.51946 210.18416 160.12346 209.84031 159.74986 209.34822 C
159.40715 208.90431 159.12482 208.30025 158.90797 207.54425 C
158.69112 206.78428 158.58113 205.89222 158.58113 204.86013 c
158.58113 203.77219 158.69424 202.86028 158.92044 202.12016 C
159.14976 201.38428 159.44513 200.78816 159.81562 200.33631 C
160.17052 199.89638 160.56624 199.58031 161.00617 199.38416 c
161.44611 199.18828 161.88236 199.09219 162.31890 199.09219 c
162.77131 199.09219 163.20501 199.18828 163.61631 199.38019 c
164.02791 199.57238 164.37317 199.78413 164.65606 200.01628 C
164.96391 200.26035 165.23376 200.50838 165.46649 200.75613 C
165.69865 201.00813 165.90302 201.22838 166.07254 201.42425 C
166.38661 201.42425 L
166.38661 197.32422 L
166.13518 197.17625 165.84321 197.00419 165.51326 196.81228 C
165.18047 196.62435 164.84145 196.46022 164.48939 196.32841 C
164.06220 196.16428 163.66025 196.04041 163.28324 195.95225 C
162.90964 195.86835 162.39430 195.82441 161.73808 195.82441 c
@c
171.04167 196.16428 m
171.04167 210.28422 L
166.99294 210.28422 L
166.99294 213.61209 L
178.53279 213.61209 L
178.53279 210.28422 L
174.48406 210.28422 L
174.48406 196.16428 L
171.04167 196.16428 L
@c
185.49014 195.80031 m
183.64961 195.80031 182.23597 196.36838 181.24356 197.50025 C
180.25427 198.63213 179.75792 200.28813 179.75792 202.46825 c
179.75792 213.61209 L
183.20031 213.61209 L
183.20031 202.72422 l
183.20031 201.51638 183.37946 200.61213 183.73748 200.02025 C
184.09550 199.42413 184.67972 199.12819 185.49014 199.12819 c
186.28157 199.12819 186.86268 199.41222 187.23317 199.98425 C
187.60422 200.55231 187.78932 201.46819 187.78932 202.72422 c
187.78932 213.61209 L
191.23172 213.61209 L
191.23172 202.48016 l
191.23172 200.33235 190.74813 198.68031 189.78378 197.52831 C
188.81631 196.37631 187.38737 195.80031 185.49014 195.80031 c
@c
206.54419 196.16428 m
202.34778 196.16428 L
198.53461 202.56435 L
197.29701 202.56435 L
197.29701 196.16428 L
193.87332 196.16428 L
193.87332 213.61209 L
199.38586 213.61209 l
200.14583 213.61209 200.80857 213.55228 201.37096 213.43209 C
201.93619 213.30822 202.45748 213.05622 202.93483 212.67609 C
203.42835 212.27613 203.81754 211.77213 204.10356 211.15616 C
204.39241 210.54416 204.53698 209.76406 204.53698 208.82013 c
204.53698 207.48416 204.30142 206.40019 203.83030 205.56822 C
203.35578 204.73625 202.72450 204.07635 201.93307 203.58425 C
206.54419 196.16428 L
@c
201.00331 208.26822 m
201.00331 208.70419 200.93754 209.08431 200.80545 209.40009 c
200.67335 209.71616 200.45367 209.96022 200.14894 210.13228 C
199.93209 210.24822 199.69370 210.32022 199.42951 210.35225 c
199.16589 210.38428 198.83934 210.40016 198.44674 210.40016 c
197.29701 210.40016 L
197.29701 205.70428 L
198.28006 205.70428 l
198.76082 205.70428 199.16589 205.74028 199.49896 205.81625 C
199.83487 205.88825 200.11776 206.04813 200.34992 206.28822 C
200.56989 206.50819 200.73657 206.76813 200.84315 207.07625 C
200.95002 207.38013 201.00331 207.77613 201.00331 208.26822 c
@c
207.55559 196.16428 m
207.55559 213.61209 L
216.82148 213.61209 L
216.82148 210.28422 L
210.97928 210.28422 L
210.97928 207.22422 L
216.36283 207.22422 L
216.36283 203.89635 L
210.97928 203.89635 L
210.97928 199.49216 L
216.82148 199.49216 L
216.82148 196.16428 L
207.55559 196.16428 L
@c
F

@rax %Note: Object
223.23855 195.25153 259.50784 240.19087 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 0.30 null ] set_fill_color
249.31899 201.35679 m
247.56888 199.40542 245.65805 197.94699 243.59613 196.98151 C
241.53392 196.00583 239.30107 195.52309 236.90750 195.52309 c
232.49197 195.52309 228.98154 197.01156 226.38671 199.99899 C
224.28454 202.43310 223.23855 205.15861 223.23855 208.16617 c
223.23855 210.83131 224.09348 213.24529 225.81326 215.39764 c
227.53332 217.55027 230.09811 219.44098 233.51783 221.07033 C
231.57666 223.30346 230.27924 225.12387 229.63550 226.52192 C
228.98154 227.91005 228.65981 229.25792 228.65981 230.55534 c
228.65981 233.15017 229.67575 235.40315 231.70762 237.32419 C
233.73921 239.23531 236.30400 240.19087 239.38157 240.19087 c
242.32876 240.19087 244.74274 239.28576 246.62353 237.48520 C
248.49439 235.67471 249.42983 233.50224 249.42983 230.96750 c
249.42983 226.86378 246.71395 223.35364 241.27257 220.44699 C
249.01710 210.58016 L
249.90265 212.30986 250.59657 214.31140 251.07931 216.58479 C
256.59099 215.40784 L
255.64564 211.63606 254.37827 208.53808 252.75883 206.10397 C
254.75046 203.46888 256.99351 201.25616 259.50784 199.46580 C
255.94724 195.25153 L
253.80482 196.62945 251.59238 198.66132 249.31899 201.35679 C
@c
238.52693 223.86671 m
240.83008 225.22450 242.31855 226.41137 242.99263 227.43723 C
243.67635 228.45317 244.00828 229.57965 244.00828 230.82690 c
244.00828 232.29524 243.54567 233.50224 242.61024 234.42775 C
241.67509 235.36290 240.51827 235.83572 239.12022 235.83572 c
237.68192 235.83572 236.49506 235.37310 235.53950 234.44787 c
234.58394 233.52236 234.11112 232.39587 234.11112 231.05820 c
234.11112 230.39433 234.28233 229.69020 234.62419 228.94583 C
234.96633 228.21165 235.48932 227.43723 236.17332 226.61263 C
238.52693 223.86671 L
@c
245.98998 205.54101 m
236.26375 217.59052 L
233.39735 215.88038 231.45591 214.29156 230.46009 212.83285 C
229.45436 211.36450 228.95150 209.91628 228.95150 208.48791 c
228.95150 206.73780 229.65562 204.91739 231.04375 203.03660 C
232.44180 201.14561 234.41301 200.21017 236.96787 200.21017 c
238.55698 200.21017 240.20646 200.70283 241.90639 201.69865 C
243.60605 202.68454 244.96384 203.97203 245.98998 205.54101 C
@c
F

@rax %Note: Object
68.62337 213.61209 233.80044 246.44126 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.46 0.08 0.00 0.32 null ] set_fill_color
78.72860 220.06006 m
75.89480 220.06006 73.64126 220.91783 71.97307 222.62967 c
70.30460 224.34548 69.47263 226.75493 69.47263 229.86198 c
69.47263 232.85622 70.30913 235.24384 71.98157 237.02485 c
73.65430 238.80586 75.90756 239.69849 78.74164 239.69849 c
79.49565 239.69849 80.17172 239.65512 80.77408 239.57291 c
81.37644 239.48617 81.95272 239.36910 82.50293 239.21745 c
82.93209 239.08762 83.40435 238.91414 83.91146 238.69757 c
84.41830 238.47647 84.82989 238.28598 85.14198 238.12554 C
85.14198 233.61902 L
84.66094 233.61902 L
84.43134 233.82255 84.14107 234.06520 83.79439 234.34696 c
83.44772 234.63298 83.05342 234.91020 82.61575 235.17893 c
82.17354 235.45191 81.68825 235.68151 81.15959 235.87228 c
80.63093 236.06277 80.08072 236.15830 79.50444 236.15830 c
78.81959 236.15830 78.19143 236.05002 77.61940 235.83317 c
77.04737 235.61660 76.50142 235.24384 75.98580 234.71093 c
75.51326 234.22989 75.12321 233.57565 74.82444 232.75672 c
74.52539 231.93326 74.37373 230.96693 74.37373 229.84894 c
74.37373 228.67030 74.52964 227.68214 74.84173 226.88050 c
75.15808 226.08340 75.56542 225.43767 76.07679 224.94784 c
76.56633 224.47134 77.11228 224.12891 77.71890 223.91660 c
78.32580 223.70428 78.92787 223.60025 79.53024 223.60025 c
80.15443 223.60025 80.75225 223.70428 81.32003 223.91235 c
81.88781 224.12041 82.36431 224.35002 82.75436 224.60117 c
83.17899 224.86564 83.55175 225.13436 83.87235 225.40280 c
84.19294 225.67606 84.47471 225.91417 84.70857 226.12649 C
85.14198 226.12649 L
85.14198 221.68488 L
84.79531 221.52472 84.39222 221.33820 83.93726 221.13014 c
83.47805 220.92661 83.01005 220.74888 82.52476 220.60602 c
81.93543 220.42828 81.38069 220.29392 80.86054 220.19868 c
80.34491 220.10769 79.63427 220.06006 78.72860 220.06006 c
@c
F

@rax %Note: Object
68.62337 213.61209 233.80044 246.44126 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.46 0.08 0.00 0.32 null ] set_fill_color
105.14891 229.87502 m
105.14891 226.81559 104.33424 224.41493 102.70063 222.66000 c
101.06674 220.90932 98.82652 220.03398 95.98394 220.03398 c
93.12831 220.03398 90.89206 220.92236 89.26724 222.69458 c
87.64214 224.46680 86.82746 226.85896 86.82746 229.87502 c
86.82746 232.91263 87.64214 235.31329 89.26724 237.07701 c
90.89206 238.84044 93.12831 239.72457 95.98394 239.72457 c
98.82652 239.72457 101.06674 238.84498 102.70063 237.09005 c
104.33424 235.33483 105.14891 232.92992 105.14891 229.87502 c
@c
100.24781 229.88353 m
100.24781 231.01030 100.13074 231.97238 99.89688 232.76098 c
99.66728 233.55383 99.35518 234.20381 98.96513 234.71093 c
98.55780 235.22655 98.09858 235.59931 97.58721 235.82013 c
97.07584 236.04548 96.54293 236.15830 95.99244 236.15830 c
95.41191 236.15830 94.88324 236.05427 94.40646 235.84620 c
93.93420 235.63814 93.47499 235.26992 93.03732 234.73701 c
92.64728 234.24718 92.33093 233.59294 92.09254 232.78252 c
91.84989 231.96784 91.72857 230.99726 91.72857 229.87502 c
91.72857 228.71367 91.84110 227.75159 92.07099 226.98454 c
92.30060 226.21748 92.61241 225.57628 93.01124 225.06066 c
93.41858 224.53625 93.87780 224.15924 94.39342 223.93814 c
94.90932 223.71307 95.44649 223.60025 95.99244 223.60025 c
96.55143 223.60025 97.09313 223.72157 97.62180 223.96422 c
98.14620 224.20261 98.59691 224.57962 98.97817 225.08674 c
99.38551 225.63694 99.69761 226.27814 99.91843 227.01061 c
100.13953 227.74280 100.24781 228.70063 100.24781 229.88353 c
@c
F

@rax %Note: Object
68.62337 213.61209 233.80044 246.44126 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.46 0.08 0.00 0.32 null ] set_fill_color
127.26170 220.42828 m
122.53833 220.42828 L
122.53833 232.95600 L
119.09792 224.86989 L
115.86076 224.86989 L
112.42006 232.95600 L
112.42006 220.42828 L
107.95238 220.42828 L
107.95238 239.33027 L
113.42126 239.33027 L
117.61143 230.00060 L
121.78885 239.33027 L
127.26170 239.33027 L
127.26170 220.42828 L
@c
F

@rax %Note: Object
68.62337 213.61209 233.80044 246.44126 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.46 0.08 0.00 0.32 null ] set_fill_color
145.71751 233.36334 m
145.71751 232.48346 145.57890 231.64724 145.29713 230.84986 c
145.01991 230.05701 144.61682 229.38973 144.09241 228.85654 c
143.77181 228.52715 143.41635 228.22384 143.03509 227.94661 c
142.64957 227.66485 142.22494 227.42674 141.75694 227.23597 c
141.29320 227.04094 140.78608 226.88504 140.24013 226.77647 c
139.69417 226.66819 139.08302 226.61206 138.40724 226.61206 c
135.91984 226.61206 L
135.91984 220.42828 L
131.17039 220.42828 L
131.17039 239.33027 L
138.50674 239.33027 l
139.59893 239.33027 140.53918 239.23049 141.33203 239.03121 c
142.12517 238.83194 142.84006 238.51984 143.48154 238.08671 c
144.19219 237.61417 144.74239 236.98148 145.13244 236.18863 c
145.52249 235.39550 145.71751 234.45524 145.71751 233.36334 c
@c
140.84249 233.25052 m
140.84249 233.78372 140.71691 234.24293 140.46123 234.62844 c
140.20980 235.01424 139.90224 235.27871 139.54677 235.42157 c
139.10060 235.61660 138.67143 235.72913 138.25984 235.75946 c
137.85250 235.78980 137.29351 235.80283 136.59137 235.80283 c
135.91984 235.80283 L
135.91984 230.13921 L
136.24923 230.13921 l
136.69994 230.13921 137.12003 230.14346 137.51887 230.15225 c
137.91742 230.16104 138.26409 230.19137 138.55890 230.23899 c
138.81458 230.28236 139.08302 230.36457 139.36479 230.49014 c
139.64655 230.61146 139.86737 230.75036 140.01902 230.90202 c
140.33991 231.21383 140.55647 231.53896 140.66929 231.87685 c
140.78608 232.21928 140.84249 232.67424 140.84249 233.25052 c
@c
F

@rax %Note: Object
68.62337 213.61209 233.80044 246.44126 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.46 0.08 0.00 0.32 null ] set_fill_color
155.90098 220.03398 m
153.36170 220.03398 151.41146 220.64939 150.04233 221.87565 c
148.67717 223.10192 147.99260 224.89597 147.99260 227.25751 c
147.99260 239.33027 L
152.74176 239.33027 L
152.74176 227.53502 l
152.74176 226.22627 152.98894 225.24690 153.48302 224.60570 c
153.97682 223.95997 154.78299 223.63937 155.90098 223.63937 c
156.99288 223.63937 157.79452 223.94693 158.30589 224.56658 c
158.81726 225.18198 159.07294 226.17439 159.07294 227.53502 c
159.07294 239.33027 L
163.82211 239.33027 L
163.82211 227.27055 l
163.82211 224.94359 163.15483 223.15408 161.82454 221.90598 c
160.48998 220.65789 158.51820 220.03398 155.90098 220.03398 c
@c
F

@rax %Note: Object
68.62337 213.61209 233.80044 246.44126 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.46 0.08 0.00 0.32 null ] set_fill_color
171.09780 220.42828 m
171.09780 235.72488 L
165.51213 235.72488 L
165.51213 239.33027 L
181.43263 239.33027 L
181.43263 235.72488 L
175.84696 235.72488 L
175.84696 220.42828 L
171.09780 220.42828 L
@c
F

@rax %Note: Object
68.62337 213.61209 233.80044 246.44126 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.46 0.08 0.00 0.32 null ] set_fill_color
183.38683 220.42828 m
183.38683 239.33027 L
196.17024 239.33027 L
196.17024 235.72488 L
188.11020 235.72488 L
188.11020 232.41005 L
195.53754 232.41005 L
195.53754 228.80466 L
188.11020 228.80466 L
188.11020 224.03367 L
196.17024 224.03367 L
196.17024 220.42828 L
183.38683 220.42828 L
@c
F

@rax %Note: Object
68.62337 213.61209 233.80044 246.44126 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.46 0.08 0.00 0.32 null ] set_fill_color
216.86173 220.42828 m
211.07254 220.42828 L
205.81172 227.36154 L
204.10441 227.36154 L
204.10441 220.42828 L
199.38104 220.42828 L
199.38104 239.33027 L
206.98611 239.33027 l
208.03493 239.33027 208.94910 239.26535 209.72494 239.13524 c
210.50476 239.00088 211.22419 238.72791 211.88268 238.31631 c
212.56299 237.88290 213.10044 237.33694 213.49474 236.66967 c
213.89357 236.00665 214.09285 235.16164 214.09285 234.13890 c
214.09285 232.69153 213.76772 231.51713 213.11773 230.61600 c
212.46350 229.71458 211.59241 228.99969 210.50050 228.46649 C
216.86173 220.42828 L
@c
209.21783 233.54079 m
209.21783 234.01332 209.12683 234.42491 208.94485 234.76734 c
208.76287 235.10948 208.45956 235.37395 208.03918 235.56019 c
207.74013 235.68605 207.41074 235.76400 207.04677 235.79858 c
206.68280 235.83317 206.23209 235.85046 205.69039 235.85046 c
204.10441 235.85046 L
204.10441 230.76312 L
205.46079 230.76312 l
206.12381 230.76312 206.68280 230.80224 207.14202 230.88472 c
207.60576 230.96268 207.99581 231.13587 208.31641 231.39581 c
208.61972 231.63420 208.84961 231.91597 208.99672 232.24961 c
209.14413 232.57899 209.21783 233.00787 209.21783 233.54079 c
@c
F

@rax %Note: Object
262.77732 213.63647 407.33660 246.25191 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.46 0.08 0.00 0.32 null ] set_fill_color
279.27865 233.17398 m
279.27865 232.29411 279.14003 231.45789 278.85827 230.66050 c
278.58104 229.86765 278.17795 229.20038 277.65354 228.66718 c
277.33294 228.33780 276.97748 228.03449 276.59622 227.75726 c
276.21071 227.47550 275.78608 227.23739 275.31808 227.04661 c
274.85433 226.85159 274.34721 226.69569 273.80126 226.58712 c
273.25531 226.47883 272.64416 226.42271 271.96838 226.42271 c
269.48098 226.42271 L
269.48098 220.23893 L
264.73153 220.23893 L
264.73153 239.14091 L
272.06787 239.14091 l
273.16006 239.14091 274.10031 239.04113 274.89317 238.84186 c
275.68630 238.64258 276.40120 238.33049 277.04268 237.89735 c
277.75332 237.42482 278.30353 236.79213 278.69357 235.99928 c
279.08362 235.20614 279.27865 234.26589 279.27865 233.17398 c
@c
274.40362 233.06117 m
274.40362 233.59436 274.27805 234.05357 274.02236 234.43909 c
273.77093 234.82488 273.46337 235.08935 273.10791 235.23222 c
272.66173 235.42724 272.23257 235.53978 271.82098 235.57011 c
271.41364 235.60044 270.85465 235.61348 270.15250 235.61348 c
269.48098 235.61348 L
269.48098 229.94986 L
269.81036 229.94986 l
270.26107 229.94986 270.68117 229.95411 271.08000 229.96290 c
271.47855 229.97169 271.82523 230.00202 272.12003 230.04964 c
272.37572 230.09301 272.64416 230.17521 272.92592 230.30079 c
273.20769 230.42211 273.42850 230.56101 273.58016 230.71266 c
273.90104 231.02447 274.11761 231.34961 274.23043 231.68750 c
274.34721 232.02992 274.40362 232.48488 274.40362 233.06117 c
@c
F

@rax %Note: Object
262.77732 213.63647 407.33660 246.25191 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.46 0.08 0.00 0.32 null ] set_fill_color
279.78576 220.23893 m
286.17307 239.14091 L
291.35140 239.14091 L
297.73871 220.23893 L
292.85065 220.23893 L
291.66321 224.10000 L
285.73115 224.10000 L
284.54797 220.23893 L
279.78576 220.23893 L
@c
290.62772 227.52765 m
288.69931 233.75452 L
286.76665 227.52765 L
290.62772 227.52765 L
@c
F

@rax %Note: Object
262.77732 213.63647 407.33660 246.25191 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.46 0.08 0.00 0.32 null ] set_fill_color
317.09565 220.23893 m
311.30646 220.23893 L
306.04564 227.17219 L
304.33833 227.17219 L
304.33833 220.23893 L
299.61496 220.23893 L
299.61496 239.14091 L
307.22003 239.14091 l
308.26885 239.14091 309.18302 239.07600 309.95887 238.94589 c
310.73868 238.81153 311.45811 238.53855 312.11660 238.12696 c
312.79691 237.69354 313.33436 237.14759 313.72866 236.48031 c
314.12750 235.81729 314.32677 234.97228 314.32677 233.94954 c
314.32677 232.50217 314.00164 231.32778 313.35165 230.42665 c
312.69742 229.52523 311.82633 228.81033 310.73443 228.27713 C
317.09565 220.23893 L
@c
309.45175 233.35143 m
309.45175 233.82397 309.36076 234.23556 309.17877 234.57798 c
308.99679 234.92013 308.69348 235.18460 308.27310 235.37083 c
307.97405 235.49669 307.64466 235.57465 307.28069 235.60923 c
306.91672 235.64381 306.46602 235.66110 305.92431 235.66110 c
304.33833 235.66110 L
304.33833 230.57376 L
305.69471 230.57376 l
306.35773 230.57376 306.91672 230.61288 307.37594 230.69537 c
307.83969 230.77332 308.22973 230.94652 308.55033 231.20646 c
308.85364 231.44485 309.08353 231.72661 309.23065 232.06025 c
309.37805 232.38964 309.45175 232.81852 309.45175 233.35143 c
@c
F

@rax %Note: Object
262.77732 213.63647 407.33660 246.25191 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.46 0.08 0.00 0.32 null ] set_fill_color
316.45871 220.23893 m
322.84602 239.14091 L
328.02435 239.14091 L
334.41165 220.23893 L
329.52359 220.23893 L
328.33616 224.10000 L
322.40409 224.10000 L
321.22091 220.23893 L
316.45871 220.23893 L
@c
327.30066 227.52765 m
325.37225 233.75452 L
323.43959 227.52765 L
327.30066 227.52765 L
@c
F

@rax %Note: Object
262.77732 213.63647 407.33660 246.25191 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.46 0.08 0.00 0.32 null ] set_fill_color
348.91087 220.23893 m
336.28791 220.23893 L
336.28791 239.14091 L
341.03735 239.14091 L
341.03735 223.84431 L
348.91087 223.84431 L
348.91087 220.23893 L
@c
F

@rax %Note: Object
262.77732 213.63647 407.33660 246.25191 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.46 0.08 0.00 0.32 null ] set_fill_color
363.79162 220.23893 m
351.16866 220.23893 L
351.16866 239.14091 L
355.91811 239.14091 L
355.91811 223.84431 L
363.79162 223.84431 L
363.79162 220.23893 L
@c
F

@rax %Note: Object
262.77732 213.63647 407.33660 246.25191 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.46 0.08 0.00 0.32 null ] set_fill_color
366.04942 220.23893 m
366.04942 239.14091 L
378.83282 239.14091 L
378.83282 235.53553 L
370.77279 235.53553 L
370.77279 232.22069 L
378.20013 232.22069 L
378.20013 228.61531 L
370.77279 228.61531 L
370.77279 223.84431 L
378.83282 223.84431 L
378.83282 220.23893 L
366.04942 220.23893 L
@c
F

@rax %Note: Object
262.77732 213.63647 407.33660 246.25191 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.46 0.08 0.00 0.32 null ] set_fill_color
394.66658 220.23893 m
382.04362 220.23893 L
382.04362 239.14091 L
386.79307 239.14091 L
386.79307 223.84431 L
394.66658 223.84431 L
394.66658 220.23893 L
@c
F

@rax %Note: Object
264.90387 195.00435 395.68365 214.59118 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.46 0.08 0.00 0.32 null ] set_fill_color
272.35417 195.00435 m
270.78406 195.00435 269.40699 195.14324 268.21786 195.42472 C
267.02844 195.70224 265.92406 196.04863 264.90387 196.46476 C
264.90387 200.95852 L
265.37414 200.95852 L
266.39887 200.15688 267.53613 199.53723 268.77260 199.10381 C
270.01332 198.67465 271.21663 198.45808 272.38224 198.45808 c
272.67846 198.45808 273.06397 198.48841 273.54813 198.54482 C
274.02746 198.60548 274.41751 198.70072 274.70891 198.82630 C
275.07090 198.96945 275.37194 199.16872 275.62110 199.42866 c
275.86998 199.68888 275.99216 200.02677 275.99216 200.45140 c
275.99216 200.92365 275.79005 201.30945 275.38583 201.60397 C
274.98189 201.90302 274.49745 202.11534 273.93817 202.25395 C
273.24255 202.42318 272.49506 202.58334 271.70079 202.73499 c
270.90652 202.88665 270.16384 203.07317 269.47757 203.29398 C
267.88876 203.80989 266.74668 204.50296 266.06041 205.37405 C
265.36932 206.24513 265.02633 207.33704 265.02633 208.65005 c
265.02633 210.41802 265.83959 211.85235 267.46583 212.94879 C
269.08753 214.04494 271.11798 214.59118 273.55266 214.59118 c
274.77496 214.59118 275.98762 214.47836 277.19546 214.24876 c
278.40359 214.01915 279.48472 213.71131 280.43887 213.32126 C
280.43887 209.00551 L
279.98277 209.00551 L
279.22167 209.60787 278.29077 210.11471 277.19546 210.52630 C
276.09562 210.94243 274.96772 211.15049 273.81118 211.15049 c
273.36472 211.15049 272.96050 211.12016 272.59852 211.06375 C
272.24135 211.00309 271.86520 210.88602 271.47033 210.71707 C
271.15087 210.58271 270.87364 210.38343 270.63865 210.11471 C
270.40337 209.85052 270.28602 209.55146 270.28602 209.22208 c
270.28602 208.74104 270.47424 208.35553 270.84529 208.07376 C
271.21663 207.78775 271.93578 207.53206 272.99820 207.30671 C
273.68901 207.15931 274.35175 207.02069 274.99096 206.88633 c
275.63017 206.75197 276.31191 206.56573 277.03559 206.32734 C
278.46000 205.85509 279.51761 205.21814 280.21323 204.41650 C
280.90403 203.61912 281.25213 202.56180 281.25213 201.24879 c
281.25213 199.37254 280.45304 197.85997 278.85005 196.71619 C
277.24734 195.57638 275.08054 195.00435 272.35417 195.00435 c
@c
300.92797 214.24876 m
293.84929 203.24211 L
293.84929 195.34677 L
288.69761 195.34677 L
288.69761 202.99946 L
281.49647 214.24876 L
287.36277 214.24876 L
291.38145 207.50173 L
295.25471 214.24876 L
300.92797 214.24876 L
@c
309.12066 195.00435 m
307.55083 195.00435 306.17348 195.14324 304.98463 195.42472 C
303.79521 195.70224 302.69083 196.04863 301.67065 196.46476 C
301.67065 200.95852 L
302.14063 200.95852 L
303.16535 200.15688 304.30290 199.53723 305.53909 199.10381 C
306.77981 198.67465 307.98340 198.45808 309.14901 198.45808 c
309.44523 198.45808 309.83074 198.48841 310.31461 198.54482 C
310.79395 198.60548 311.18428 198.70072 311.47569 198.82630 C
311.83767 198.96945 312.13871 199.16872 312.38759 199.42866 c
312.63676 199.68888 312.75865 200.02677 312.75865 200.45140 c
312.75865 200.92365 312.55682 201.30945 312.15231 201.60397 C
311.74838 201.90302 311.26422 202.11534 310.70494 202.25395 C
310.00932 202.42318 309.26183 202.58334 308.46728 202.73499 c
307.67301 202.88665 306.93061 203.07317 306.24435 203.29398 C
304.65553 203.80989 303.51317 204.50296 302.82690 205.37405 C
302.13609 206.24513 301.79282 207.33704 301.79282 208.65005 c
301.79282 210.41802 302.60608 211.85235 304.23231 212.94879 C
305.85402 214.04494 307.88476 214.59118 310.31915 214.59118 c
311.54145 214.59118 312.75411 214.47836 313.96224 214.24876 c
315.17036 214.01915 316.25150 213.71131 317.20564 213.32126 C
317.20564 209.00551 L
316.74954 209.00551 L
315.98816 209.60787 315.05754 210.11471 313.96224 210.52630 C
312.86239 210.94243 311.73420 211.15049 310.57795 211.15049 c
310.13150 211.15049 309.72699 211.12016 309.36501 211.06375 C
309.00784 211.00309 308.63169 210.88602 308.23710 210.71707 C
307.91764 210.58271 307.64013 210.38343 307.40542 210.11471 C
307.17014 209.85052 307.05250 209.55146 307.05250 209.22208 c
307.05250 208.74104 307.24072 208.35553 307.61178 208.07376 C
307.98340 207.78775 308.70255 207.53206 309.76498 207.30671 C
310.45578 207.15931 311.11852 207.02069 311.75773 206.88633 c
312.39694 206.75197 313.07868 206.56573 313.80236 206.32734 C
315.22649 205.85509 316.28438 205.21814 316.97972 204.41650 C
317.67080 203.61912 318.01890 202.56180 318.01890 201.24879 c
318.01890 199.37254 317.21953 197.85997 315.61682 196.71619 C
314.01383 195.57638 311.84702 195.00435 309.12066 195.00435 c
@c
324.58535 195.34677 m
324.58535 210.64337 L
318.52630 210.64337 L
318.52630 214.24876 L
335.79553 214.24876 L
335.79553 210.64337 L
329.73676 210.64337 L
329.73676 195.34677 L
324.58535 195.34677 L
@c
337.91528 195.34677 m
337.91528 214.24876 L
351.78180 214.24876 L
351.78180 210.64337 L
343.03890 210.64337 L
343.03890 207.32854 L
351.09553 207.32854 L
351.09553 203.72315 L
343.03890 203.72315 L
343.03890 198.95216 L
351.78180 198.95216 L
351.78180 195.34677 L
337.91528 195.34677 L
@c
376.20964 195.34677 m
371.08602 195.34677 L
371.08602 207.87449 L
367.35420 199.78838 L
363.84293 199.78838 L
360.11055 207.87449 L
360.11055 195.34677 L
355.26444 195.34677 L
355.26444 214.24876 L
361.19679 214.24876 L
365.74186 204.91909 L
370.27304 214.24876 L
376.20964 214.24876 L
376.20964 195.34677 L
@c
386.78570 195.00435 m
385.21559 195.00435 383.83852 195.14324 382.64939 195.42472 C
381.45997 195.70224 380.35559 196.04863 379.33540 196.46476 C
379.33540 200.95852 L
379.80539 200.95852 L
380.83039 200.15688 381.96765 199.53723 383.20413 199.10381 C
384.44485 198.67465 385.64816 198.45808 386.81376 198.45808 c
387.10998 198.45808 387.49550 198.48841 387.97937 198.54482 C
388.45899 198.60548 388.84904 198.70072 389.14044 198.82630 C
389.50243 198.96945 389.80346 199.16872 390.05263 199.42866 c
390.30151 199.68888 390.42369 200.02677 390.42369 200.45140 c
390.42369 200.92365 390.22157 201.30945 389.81735 201.60397 C
389.41313 201.90302 388.92898 202.11534 388.36970 202.25395 C
387.67408 202.42318 386.92658 202.58334 386.13203 202.73499 c
385.33805 202.88665 384.59537 203.07317 383.90910 203.29398 C
382.32028 203.80989 381.17820 204.50296 380.49194 205.37405 C
379.80085 206.24513 379.45786 207.33704 379.45786 208.65005 c
379.45786 210.41802 380.27112 211.85235 381.89735 212.94879 C
383.51906 214.04494 385.54951 214.59118 387.98419 214.59118 c
389.20620 214.59118 390.41915 214.47836 391.62699 214.24876 c
392.83512 214.01915 393.91625 213.71131 394.87039 213.32126 C
394.87039 209.00551 L
394.41430 209.00551 L
393.65320 209.60787 392.72230 210.11471 391.62699 210.52630 C
390.52715 210.94243 389.39924 211.15049 388.24271 211.15049 c
387.79625 211.15049 387.39203 211.12016 387.03005 211.06375 C
386.67260 211.00309 386.29672 210.88602 385.90186 210.71707 C
385.58239 210.58271 385.30517 210.38343 385.07017 210.11471 C
384.83490 209.85052 384.71754 209.55146 384.71754 209.22208 c
384.71754 208.74104 384.90576 208.35553 385.27682 208.07376 C
385.64816 207.78775 386.36731 207.53206 387.42973 207.30671 C
388.12054 207.15931 388.78328 207.02069 389.42249 206.88633 c
390.06170 206.75197 390.74343 206.56573 391.46712 206.32734 C
392.89153 205.85509 393.94913 205.21814 394.64476 204.41650 C
395.33556 203.61912 395.68365 202.56180 395.68365 201.24879 c
395.68365 199.37254 394.88457 197.85997 393.28157 196.71619 C
391.67887 195.57638 389.51206 195.00435 386.78570 195.00435 c
@c
F

@rax %Note: Object
253.31528 262.75691 294.19540 293.81216 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.26 0.05 0.00 0.13 null ] set_fill_color
253.31528 293.81216 m
294.19540 293.81216 L
294.19540 262.75691 L
253.31528 262.75691 L
253.31528 293.81216 L
@c
F

@rax %Note: Object
223.47609 262.32236 236.69518 393.38391 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 0.00 null ] set_fill_color
223.47609 393.38391 m
236.69518 393.38391 L
236.69518 262.32236 L
223.47609 262.32236 L
223.47609 393.38391 L
@c
F

@rax %Note: Object
142.72328 262.72942 257.55619 430.04154 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.26 0.05 0.00 0.13 null ] set_fill_color
257.55619 262.72942 m
228.88970 262.72942 L
228.88970 316.98822 L
180.88980 316.98822 L
180.88980 262.72942 L
151.22324 262.72942 L
151.22324 376.62265 L
151.22324 379.14236 l
151.22324 392.14431 156.42340 403.86954 166.82343 414.35178 c
177.18973 424.80057 189.38976 430.04154 203.38980 430.04154 c
217.72318 430.04154 230.32290 424.93493 241.22296 414.75515 c
252.12302 404.57509 257.55619 392.81641 257.55619 379.47827 c
257.55619 262.72942 L
@c
228.88970 379.47827 m
228.88970 385.96252 226.35638 391.40532 221.32290 395.77294 c
216.28970 400.14028 210.35622 402.32409 203.55647 402.32409 c
197.38970 402.32409 192.08976 400.07310 187.58976 395.60485 c
183.12321 391.13631 180.88980 385.76098 180.88980 379.47827 c
180.88980 345.88148 L
228.88970 345.88148 L
228.88970 379.47827 l
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel14Dict 14.0 0
%%EOF
